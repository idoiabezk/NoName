GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fill = list)   #name of the values from PFBA:sum_21PFAS
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fill = "list")   #name of the values from PFBA:sum_21PFAS
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = "list")   #name of the values from PFBA:sum_21PFAS
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list)   #name of the values from PFBA:sum_21PFAS
GC_qToF_CPsFoodResults2$C9 <- as.numeric(GC_qToF_CPsFoodResults2$C9)
mutate(CorrectedArea = C9/IS )
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list) |>    #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9/IS )
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list) |>    #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9/IS )
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list) |>    #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9/IS )
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES")
|>
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area))
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list)
C_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list) |>    #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9/IS )
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list) |>    #name of the values from PFBA:sum_21PFAS
mutate(
C9 = as.numeric(C9),
IS = as.numeric(IS),
CorrectedArea = C9/IS))
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = `Molecule List`, # name of the new column
values_from = Area,
values_fn = list) |>    #name of the values from PFBA:sum_21PFAS
mutate(
C9 = as.numeric(C9),
IS = as.numeric(IS),
CorrectedArea = C9/IS)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list) |>    #name of the values from PFBA:sum_21PFAS
mutate(
C9 = as.numeric(C9),
IS = as.numeric(IS),
CorrectedArea = C9/IS)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)     #name of the values from PFBA:sum_21PFAS
View(GC_qToF_CPsFoodResults3)
mutate( CorrectedArea = C9H17Cl3/C9H16CL4)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list) |>     #name of the values from PFBA:sum_21PFAS
mutate( CorrectedArea = C9H17Cl3/C9H16CL4)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list) |>     #name of the values from PFBA:sum_21PFAS
mutate( CorrectedArea = C9H17Cl3/C9H16Cl4)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule) |>     #name of the values from PFBA:sum_21PFAS
mutate( CorrectedArea = C9H17Cl3/C9H16Cl4)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES")
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area))
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule)
pivot_wider(id_cols = `Replicate Name',
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area) |>       #name of the values from PFBA:sum_21PFAS
mutate( CorrectedArea = C9H17Cl3/C9H16Cl4)
print(CorrectedArea)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area) |>       #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9H17Cl3/C9H16Cl4)
print(CorrectedArea)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area) |>       #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9H17Cl3/C9H16Cl4) |>
print(CorrectedArea)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area) |>       #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9H17Cl3/C9H16Cl4) |>
print(CorrectedArea)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area) |>       #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9H17Cl3/C9H16Cl4)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area) |>       #name of the values from PFBA:sum_21PFAS
mutate(CorrectedArea = C9H17Cl3/C9H16Cl4) |>
print(CorrectedArea)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
mutate(Area = as.numeric(Area)) |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area) |>       #name of the values from PFBA:sum_21PFAS
mutate(
C9H17Cl3 = as.numeric(C9H17Cl3),
C9H16Cl4 = as.numeric(C9H16Cl4),
CorrectedArea = C9H17Cl3/C9H16Cl4) |>
print(CorrectedArea)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)
class(C9H17Cl3)
class(GC_qToF_CPsFoodResults3$C9H17Cl3)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list) |>       #name of the values from PFBA:sum_21PFAS
GC_qToF_CPsFoodResults3$C9H17Cl3 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3)
GC_qToF_CPsFoodResults3$C9H17Cl3 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3)
GC_qToF_CPsFoodResults3$C9H16Cl4 = as.numeric(GC_qToF_CPsFoodResults3$C9H16Cl4)
CorrectedArea = C9H17Cl3/C9H16Cl4)
CorrectedArea = C9H17Cl3/C9H16Cl4)
CorrectedArea = GC_qToF_CPsFoodResults3$C9H17Cl3/GC_qToF_CPsFoodResults3$C9H16Cl4
print(CorrectedArea)
GC_qToF_CPsFoodResults3 = as.numeric(GC_qToF_CPsFoodResults3)
GC_qToF_CPsFoodResults3$c(C9H17Cl3:C10H17Cl5) = as.numeric(GC_qToF_CPsFoodResults3$c(C9H17Cl3:C10H17Cl5))
GC_qToF_CPsFoodResults3$C9H17Cl3:C10H17Cl5 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C10H17Cl5)
GC_qToF_CPsFoodResults3$C9H17Cl3:C10H17Cl5 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C10H17Cl5)
GC_qToF_CPsFoodResults3$C9H17Cl3:C10H13Cl9 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C10H13Cl9)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)       #name of the values from PFBA:sum_21PFAS
rm(list = ls())
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)       #name of the values from PFBA:sum_21PFAS
library(dplyr)
library(tidyr)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)       #name of the values from PFBA:sum_21PFAS
GC_qToF_CPsFoodResults3$C9H17Cl3:C10H13Cl9 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C10H13Cl9)
View(GC_qToF_CPsFoodResults3)
GC_qToF_CPsFoodResults3$C9H17Cl3:C10H13Cl9 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C10H13Cl9)
GC_qToF_CPsFoodResults3$C14H24Cl3:C10H13Cl6 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C14H24Cl6)
rm(list = ls())
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)       #name of the values from PFBA:sum_21PFAS
View(GC_qToF_CPsFoodResults3)
rm(list = ls())
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)       #name of the values from PFBA:sum_21PFAS
View(GC_qToF_CPsFoodResults3)
GC_qToF_CPsFoodResults3$C9H17Cl3:C14H24Cl3 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C14H24Cl6)
GC_qToF_CPsFoodResults3$C9H17Cl3:C14H24Cl6 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C14H24Cl6)
GC_qToF_CPsFoodResults3$C9H17Cl3:C12H21Cl5 = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:C12H21Cl5)
GC_qToF_CPsFoodResults3$C9H16Cl4 = as.numeric(GC_qToF_CPsFoodResults3$C9H16Cl4)
rm(list = ls())
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)       #name of the values from PFBA:sum_21PFAS
View(GC_qToF_CPsFoodResults3)
GC_qToF_CPsFoodResults3$C9H17Cl3:'13C12H18Cl8' = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:'13C12H18Cl8')
rm(list = ls())
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)       #name of the values from PFBA:sum_21PFAS
View(GC_qToF_CPsFoodResults3)
GC_qToF_CPsFoodResults3$C9H17Cl3:IS = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:IS)
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)
CorrectedArea = GC_qToF_CPsFoodResults3$C9H17Cl3/GC_qToF_CPsFoodResults3$IS
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS) |>
CorrectedArea = GC_qToF_CPsFoodResults3$C9H17Cl3/GC_qToF_CPsFoodResults3$IS
GC_qToF_CPsFoodResults3$C9H16Cl4 = as.numeric(GC_qToF_CPsFoodResults3$C9H16Cl4)
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)
CorrectedArea = GC_qToF_CPsFoodResults3$C9H17Cl3/GC_qToF_CPsFoodResults3$IS
print(CorrectedArea)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list) |>       #name of the values from PFBA:sum_21PFAS
group_by(`Replicate Name`) |>
tally()
GC_qToF_CPsFoodResults3$C9H17Cl3:IS = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:IS)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)        #name of the values from PFBA:sum_21PFAS
View(GC_qToF_CPsFoodResults3)
group_by(`Replicate Name`, `IS`)
group_by(`Replicate Name`,IS)
group_by('Replicate Name',IS)
group_by('Replicate Name': IS)
GC_qToF_CPsFoodResults3$C9H17Cl3:IS = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:IS)
GC_qToF_CPsFoodResults3$C9H16Cl4 = as.numeric(GC_qToF_CPsFoodResults3$C9H16Cl4)
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)
CorrectedArea = GC_qToF_CPsFoodResults3$C9H16Cl4/GC_qToF_CPsFoodResults3$IS
print(CorrectedArea)
CorrectedArea<- CorrectedArea = GC_qToF_CPsFoodResults3$C9H16Cl4/GC_qToF_CPsFoodResults3$IS
CorrectedArea <- CorrectedArea = GC_qToF_CPsFoodResults3$C9H16Cl4/GC_qToF_CPsFoodResults3$IS
CorrectedArea<-CorrectedArea = GC_qToF_CPsFoodResults3$C9H16Cl4/GC_qToF_CPsFoodResults3$IS
GC_qToF_CPsFoodResults3$c(C9H17Cl3:IS) = as.numeric(GC_qToF_CPsFoodResults3$c(C9H17Cl3:IS)
GC_qToF_CPsFoodResults3$c(C9H17Cl3:IS) = as.numeric(GC_qToF_CPsFoodResults3$c(C9H17Cl3:IS))
GC_qToF_CPsFoodResults3$c(C9H17Cl3,IS) = as.numeric(GC_qToF_CPsFoodResults3$c(C9H17Cl3,IS))
GC_qToF_CPsFoodResults3$C9H17Cl3:IS = as.numeric(GC_qToF_CPsFoodResults3$C9H17Cl3:IS)
mutate(CorrectedArea = GC_qToF_CPsFoodResults3$C9H16Cl4/GC_qToF_CPsFoodResults3$IS)
?mutate
CorrectedArea <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$C9H16Cl4/GC_qToF_CPsFoodResults3$IS)
View(CorrectedArea)
pattern <- "^C\\d+" # This pattern matches column names starting with "C" followed by numbers
GC_qToF_CPsFoodResults3 <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)), as.numeric) # Apply as.numeric() to columns matching the pattern
pattern <- "^C\\d+" # This pattern matches column names starting with "C" followed by numbers
GC_qToF_CPsFoodResults3 <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)), as.numeric) # Apply as.numeric() to columns matching the pattern
head(GC_qToF_CPsFoodResults3$C13H23Cl5)
str(GC_qToF_CPsFoodResults3$C13H23Cl5)
rm(list = ls())
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)        #name of the values from PFBA:sum_21PFAS
pattern <- "^C\\d+" # This pattern matches column names starting with "C" followed by numbers
GC_qToF_CPsFoodResults3 <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)), as.numeric) # Apply as.numeric() to columns matching the pattern
head(GC_qToF_CPsFoodResults3$C13H23Cl5)
str(GC_qToF_CPsFoodResults3$C13H23Cl5)
rm(list = ls())
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area,
values_fn = list)        #name of the values from PFBA:sum_21PFAS
pattern <- "^C\\d+" # This pattern matches column names starting with "C" followed by numbers
GC_qToF_CPsFoodResults3 <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)), as.numeric) # Apply as.numeric() to columns matching the pattern
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)
View(GC_qToF_CPsFoodResults3)
CorrectedArea <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$C9H16Cl4/GC_qToF_CPsFoodResults3$IS)
print(CorrectedArea)
View(CorrectedArea)
CorrectedArea <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)),
~ . / GC_qToF_CPsFoodResults3$IS)
print(CorrectedArea)
View(CorrectedArea)
GC_qToF_CPsFoodResults2 <- GC_qToF_CPsFoodResults |>  #Wide the data so each sample is in one row
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area, #name of the values for the new columns
values_fn = list) #data type
pattern <- "^C\\d+" # This pattern matches column names starting with "C" followed by numbers
GC_qToF_CPsFoodResults3 <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)), as.numeric) # Apply as.numeric() to columns matching the pattern
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)# Define the IS as numeric
CorrectedArea <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)),
~ . / GC_qToF_CPsFoodResults3$IS) #It will now do it for all the columns that have the pattern (start the name with "C")
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>  #Wide the data so each sample is in one row
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area, #name of the values for the new columns
values_fn = list) #data type
pattern <- "^C\\d+" # This pattern matches column names starting with "C" followed by numbers
GC_qToF_CPsFoodResults3 <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)), as.numeric) # Apply as.numeric() to columns matching the pattern
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)# Define the IS as numeric
CorrectedArea <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)),
~ . / GC_qToF_CPsFoodResults3$IS) #It will now do it for all the columns that have the pattern (start the name with "C")
GC_qToF_CPsFoodResults3$RS = as.numeric(GC_qToF_CPsFoodResults3$RS)# Define the RS as numeric
rm(list = ls()) #Clean the environment
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>  #Wide the data so each sample is in one row
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area, #name of the values for the new columns
values_fn = list) #data type
pattern <- "^C\\d+" # This pattern matches column names starting with "C" followed by numbers
GC_qToF_CPsFoodResults3 <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)), as.numeric) # Apply as.numeric() to columns matching the pattern
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)# Define the IS as numeric
CorrectedArea <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)),
~ . / GC_qToF_CPsFoodResults3$IS) #It will now do it for all the columns that have the pattern (start the name with "C")
GC_qToF_CPsFoodResults3$RS = as.numeric(GC_qToF_CPsFoodResults3$RS)# Define the RS as numeric
CorrectedArea <- mutate_at(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$RS / GC_qToF_CPsFoodResults3$IS) #It will now do it for all the columns that have the pattern (start the name with "C")
Recovery <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$RS / GC_qToF_CPsFoodResults3$IS) #It will now do it for all the columns that have the pattern (start the name with "C")
View(Recovery)
Recovery <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$IS / GC_qToF_CPsFoodResults3$RS) #It will now do it for all the columns that have the pattern (start the name with "C")
View(GC_qToF_CPsFoodResults3)
Recovery <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$Recovery*100)
Recovery <- mutate(Recovery, NewColumn2 = Recovery$Recovery * 100)
Recovery <- mutate_at(Recovery, vars(matches(pattern)),
~ . *100)
View(Recovery)
Recovery <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$IS / GC_qToF_CPsFoodResults3$RS) #Dividing the IS by RS
RecoveryPercentage <- mutate_at(Recovery, vars(matches(pattern)),
~ . *100)
library(readxl)
dataset <- read_excel(NULL)
library(readxl)
GC_qToF_CPsFoodResults <- read_excel("F:/OREBRO/CP analysis/Food project/Result/Skyline/GC_qToF_CPsFoodResults.xlsx")
View(GC_qToF_CPsFoodResults)
#Load the libraries
library(dplyr)
library(tidyr)
View(GC_qToF_CPsFoodResults)
#Wide the data so each sample is in one row
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area, #name of the values for the new columns
values_fn = list) #data type
View(GC_qToF_CPsFoodResults3)
View(GC_qToF_CPsFoodResults)
#Wide the data so each sample is in one row
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area, #name of the values for the new columns
) #data type
#Wide the data so each sample is in one row
GC_qToF_CPsFoodResults3 <- GC_qToF_CPsFoodResults |>
filter(Quantitative == "YES") |>
pivot_wider(id_cols = `Replicate Name`,
names_from = Molecule, # name of the new column
values_from = Area #name of the values for the new columns
) #data type
GC_qToF_CPsFoodResults3$IS = as.numeric(GC_qToF_CPsFoodResults3$IS)# Define the IS as numeric
#Divide the area of the homologues by the IS
CorrectedArea <- mutate_at(GC_qToF_CPsFoodResults3, vars(matches(pattern)),
~ . / GC_qToF_CPsFoodResults3$IS) #It will now do it for all the columns that have the pattern (start the name with "C")
View(CorrectedArea)
?mutate
#Dividing the IS by RS
Recovery <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$IS / GC_qToF_CPsFoodResults3$RS)
View(Recovery)
?pivot_longer
pivot_longer(Recovery,
cols = 'Replicate Name':RS,
names_to = "Replicate Name", # name of the new column
)
#Load the libraries
library(dplyr)
library(tidyr)
#Dividing the IS by RS
Recovery <- mutate(GC_qToF_CPsFoodResults3, GC_qToF_CPsFoodResults3$IS / GC_qToF_CPsFoodResults3$RS)
View(Recovery)
