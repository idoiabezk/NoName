1+1
1+1
1:6
1+1 #Here we are asking R to calculate the sum of 1 and 1
1+1 #Here we are asking R to calculate the sum of 1 and 1
1:6
1+1 #Here we are asking R to calculate the sum of 1 and 1
a<- 1:6 #we generate the object named "a" and it will contain the result of the operation "1:6"
a<- 1:6 #we generate the object named "a" and it will contain the result of the operation "1:6"
a <- 1:6 #we generate the object named "a" and it will contain the result of the operation "1:6"
a <- 1:6
1+1 #Here we are asking R to calculate the sum of 1 and 1
1:6
1+1 #Here we are asking R to calculate the sum of 1 and 1
1:6
```{r}
1+1 #Here we are asking R to calculate the sum of 1 and 1
a+2
a%*%a
round(2,5)
round(2,7)
round(2,1)
mean(a)
a <- 1:6 #we generate the object named "a" and it will contain the result of the operation "1:6"
mean(a)
sum(a)
sample(a)
c(1, 5, 12, 20)
a <- 1:6 #we generate the object named "a" and it will contain the result of the operation "1:6"
a <- 1:6 #we generate the object named "a" and it will contain the result of the operation "1:6"
a <- 1:6
1:6
a<- 1:6
a <- 1:6
example <- function(){
a <- 1:6
a <- sample(a, size = 2)
sum(a)
}
example <- function(){
b <- c(1, 2, 3, 4, 5, 6)
b <- sample(b, size = 2)
sum(b)
}
example <- function(){
b <- c(1, 2, 3, 4, 5, 6)
b <- sample(b, size = 2)
sum(b)
}
sum(b)
b <- c(1, 2, 3, 4, 5, 6)
b <- sample(b, size = 2)
sum(b)
example <- function(){
b <- c(1, 2, 3, 4, 5, 6)
b <- sample(b, size = 2)
sum(b)
}
sum(b)
roll <- function() {
die <- 1:6
dice <- sample(die, size = 2, replace = TRUE)
sum(dice)
}
ana ()
ana <- function(){
b <- c(1, 2, 3, 4, 5, 6)
b <- sample(b, size = 2)
sum(b)
}
ana ()
ana(b =1:4)
a <- 1:6 #we generate the object named "a" and it will contain the result of the operation "1:6"
a
a+2
b <- 1:4
ana(b)
ana2 <- function(b2){
b3 <- sample(b2, size = 2)
sum(b3)
}
ana (b2)
ana2 <- function(b2 = 1:4){
b3 <- sample(b2, size = 2)
sum(b3)
}
ana (b2)
ana2 <- function(b2){
b3 <- sample(b2, size = 2)
sum(b3)
}
ana2 ()
ana <- function(b2){
b3 <- sample(b2, size = 2)
sum(b3)
}
ana ()
ana <- function(b2){
b3 <- sample(b2, size = 2)
sum(b3)
}
ana (b2 = 1:4)
library(ggplot2)
x <- c(1,1,2,2,2,3)
qplot(x, binwidth = 1)
qplot(x, binwidth = 1) #the function and the arguments we want to use
v1 <- c(1,2,3,4) #numerical
v1
v2 <- c("I", "am", "Idoia") #text
v2
v3 <- c(TRUE, FALSE, TRUE) #logical
v3
v1 <- c(1,2,3,4) #numerical
v1
v2 <- c("I", "am", "Idoia") #text
v2
v3 <- c(TRUE, FALSE, TRUE) #logical
v3
is.vector(v1)
length(v1)
length(v1)
names(v1)<- c("one", "two", "three", "four")
attributes(v1)
v1
names(v1) <- NULL
v1
v1 <- c(1,2,3,4) #numerical
v1
v2 <- c("I", "am", "Idoia") #text
v2
v3 <- c(TRUE, FALSE, TRUE) #logical
v3
is.vector(v1)
names(v1)<- c("one", "two", "three", "four") #names if the attribute that we want to add and in brackets the vector that we want to add them to
attributes(v1) #will show us the attributes of the vector "v1"
dim(v1) <- c(2,3)
dim(v1) <- c(2,3,4,5)
dim(v1) <- c(2, 3)
v1 <- c(1,2,3,4) #numerical
v1
dim(v1) <- c(2, 3)
dim(v1) <- c(1, 2)
die <- c(1,2,3,4,5,6)
dim(die) <- c(2, 3)
die
v1 <- c(1,2,3,4)
dim(v1) <- c(1, 2)
dim(v1) <- c(2,3)
v1 <- c(1,2,3,4,5,6)
dim(v1) <- c(2,3)
dim
v1
v1 <- c(1,2,3,4,5,6) #numerical
v1
is.vector(v1)
length(v1)
names(v1)<- c("one", "two", "three", "four", "five", "six") #names if the attribute that we want to add and in brackets the vector that we want to add them to
attributes(v1) #will show us the attributes of the vector "v1"
v1
names(v1) <- NULL
v1
dim(v1) <- c(2,3)
v1
m <- matrix(v1, nrow =2) #it will fill it by column
m1 <- matrix(v1, nrow =2) #it will fill it by column
m1
m2 <- matrix(v1, nrow =2, byrow = TRUE) #it will fill it by row
m2
ar<- array(c(11:14,21:24,31:34), dim = c(2,2,3))
ar
l1 <- list(10:30, "Idoia", list(TRUE, FALSE))
l1
df1 <- data.frame(people = c("Victoria", "Thanh", "Idoia"),
description = c("student", "boss", "student"), height = c(1.63, 1.70, 1.65))
df1
df1 <- data.frame(people = c("Victoria", "Thanh", "Idoia"),
description = c("student", "boss", "student"), workingTime = c(0.17, 25, 2.17))
df1
df1 <- data.frame(People = c("Victoria", "Thanh", "Idoia"),
Position = c("student", "boss", "student"), YearsWorking = c(0.17, 25, 2.17))
df1
df1 <- data.frame(People = c("Victoria", "Thanh", "Idoia"),
Position = c("Student", "Boss", "Student"), YearsWorking = c(0.17, 25, 2.17))
df1
class(m2)
class(m1)
ar1<- array(c(11:14,21:24,31:34), dim = c(2,2,3))
ar1
class(df1)
now <- Sys.time()
now
typeof(now)
class(now)
v4<- c("male", "female", "male")
class(v4)
gender <- factor(v4)
class(v4)
attributes(gender)
class(v4)
gender <- factor(v4)
attributes(gender)
unclass(gender)
df1[2,3]
df1[2,c(2,3)]
df2<- df1[1:2,1:2]
df2
df1[1,-2]
df1[1:3,-2]
df1[1,]#it will extract everything in the first row
df1$People
df1[[People]]
df1[[People]]
v5<- c(0,0,0,0,0,0)
v5<- c(0,0,0,0,0,0)
v5[1]<-1000 #we select the first value of the vector "v5" and we replace it by "1000"
v5
v5[c(1,2,3)]<-c(1,1,1)
v5
v5[7]<-0 #we select the 7th value of the vector v5 which is empty and replace it for a 0
v5
df1$Position<-NULL #We select the column "Position" from the data frame "df1" and delete it
df1
3<2
3 %in% c(1,2,3)
c(1,2,3)%in%c(3,4,5)
cond1&cond2 #are "cond1" and "cond2" true?
cond1<-2<3
cond2<-3<3
cond1&cond2 #are "cond1" and "cond2" true?
