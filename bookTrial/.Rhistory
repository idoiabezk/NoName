geom_point(mapping = aes(x = PFOA, y = PFBS, # new mapping
size = PFBS), # size of points according to PFBS values
colour = "purple") + # colour outside of mappings
theme_classic() # This theme will remove the background colours and lines
PFAS_insects_long <- Statistics_Kumla_20200408 %>% # shortcut for pipe Ctrl + shift + M
pivot_longer(cols = PFBA:sum_21PFAS, # select all columns from PFBA to sum_21PFAS
names_to = "PFAS", # name of the new column
values_to = "Conc") %>%  #name of the values from PFBA:sum_21PFAS
mutate(PFAS = as.factor(PFAS)) #make PFAS column a factor variable
PFAS_insects_long <- Statistics_Kumla_20200408 %>% # shortcut for pipe Ctrl + shift + M
pivot_longer(cols = PFBA:sum_21PFAS, # select all columns from PFBA to sum_21PFAS
names_to = "PFAS", # name of the new column
values_to = "Conc") %>%  #name of the values from PFBA:sum_21PFAS
mutate(PFAS = as.factor(PFAS)) #make PFAS column a factor variable
PFAS_insects_long <- Statistics_Kumla_20200408 %>% # shortcut for pipe Ctrl + shift + M
pivot_longer(cols = PFBA:Water, # select all columns from PFBA to sum_21PFAS
names_to = "PFAS", # name of the new column
values_to = "Conc") %>%  #name of the values from PFBA:sum_21PFAS
mutate(PFAS = as.factor(PFAS)) #make PFAS column a factor variable
PFAS_insects_long <- Statistics_Kumla_20200408 %>% # shortcut for pipe Ctrl + shift + M
pivot_longer(cols = PFBA:PFOA, # select all columns from PFBA to sum_21PFAS
names_to = "somePFAS", # name of the new column
values_to = "Conc") %>%  #name of the values from PFBA:sum_21PFAS
mutate(somePFAS = as.factor(somePFAS)) #make PFAS column a factor variable
PFAS_insects_long <- Statistics_Kumla_20200408 %>% # shortcut for pipe Ctrl + shift + M
pivot_longer(cols = PFBA:PFOA, # select all columns from PFBA to sum_21PFAS
names_to = "somePFAS", # name of the new column
values_to = "Conc") %>%  #name of the values from PFBA:sum_21PFAS
mutate(somePFAS = as.factor(somePFAS)) #make PFAS column a factor variable
#check the PFAS group names
PFAS_insects_long |> group_by(somePFAS) |> tally() |> view()
# select PFOS isomers
PFOS_branched <- c("1-PFOS 419/169", "3/4/5-PFOS80/98.9")
PFAS_insects_long |>
filter(Group != "Water") |> #remove all water samples to only include solid samples
filter(str_detect(PFAS, "sum_", negate = TRUE)) |> #remove all sum of PFAS using the argument: negate=TRUE
ggplot(aes(x = PFAS, y = Conc)) +
geom_point() +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
PFAS_insects_long |>
filter(Group != "Water") |> #remove all water samples to only include solid samples
filter(str_detect(somePFAS, "sum_", negate = TRUE)) |> #remove all sum of PFAS using the argument: negate=TRUE
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point() +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(shape = Conc < 200) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(shape = somePFAS < 200) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(shape = (somePFAS < 200)) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(shape = (somePFAS < 200))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(shape = (Conc < 200))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(aes(shape = (Conc < 200))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(shape = (somePFAS$Conc < 200)) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(shape = (PFAS_insects_long$somePFAS < 200)) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
geom_point(mapping = aes(shape = (somePFAS < 200)) +
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(shape = (PFAS_insects_long$somePFAS < 200))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(shape = (
Statistics_Kumla_20200408 |>  select(Year, PFOA) |> filter(Year== 2017))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(color = (
Statistics_Kumla_20200408 |>  select(Year, PFOA) |> filter(Year== 2017))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = your_data, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = (somePFAS < 200))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = (somePFAS < 200))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = "red",(somePFAS < 200))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = "red",(somePFAS < 20))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = "red",(somePFAS < 0.1))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(somePFAS < 0.1, "red", "black"))) +
geom_boxplot() +
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(somePFAS < 0.1, "red", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.1, "red", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.007, "red", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) << 0.007, "red", "black"))) +
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) > 0.007, "red", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) > 0.007, "red", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.007, "red", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.007, "black", "red"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.007, "orange", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) > 0.007, "orange", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
```{r}
library(tidyverse)
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = ID, y = PFBA)
) +
geom_point()
```{r}
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = ID, y = PFBA, color = Group)
) +
geom_point()
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = ID, y = PFBA, color = Group)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = ID, y = PFBA)
) +
geom_point(mapping = aes(color = Group, shape = Group_Family)) +
geom_smooth(method = "lm")
ggplot(data = Statistics_Kumla_20200408, mapping = aes(x = PFOA, y = PFBA)) +
geom_point(size = 2, colour = "black") + # add a scatter plot
geom_smooth(method = "lm", # uses the linear regression model
se = TRUE, # this will remove the confidence intervals
colour = "orange",
size = 2) +
geom_smooth(method = "loess",
se = TRUE,
colour = "green",
size = 2)
ggplot(data = Statistics_Kumla_20200408, mapping = aes(x = PFOA, y = PFOS)) +
geom_point(size = 2, colour = "black") + # add a scatter plot
geom_smooth(method = "lm", # uses the linear regression model
se = FALSE, # this will remove the confidence intervals
colour = "orange",
size = 2) +
geom_smooth(method = "loess",
se = FALSE,
colour = "green",
size = 2)
ggplot(data = Statistics_Kumla_20200408) +
geom_point(mapping = aes(x = PFOA, y = PFBA, size = PFOS), colour = "black")
ggplot(data = Statistics_Kumla_20200408) +
geom_point(mapping = aes(x = PFOA, y = PFBA, size = PFOS), colour = "black") +
scale_size_continuous(
name = "PFOS Description",
breaks = c(10, 50, 100, 500, 1000),  # Adjust the breaks to include more values
labels = c("10", "50", "100", "500", "1000")  # Adjust labels accordingly
)
ggplot(data = Statistics_Kumla_20200408) +
geom_point(mapping = aes(x = PFOA, y = PFBA, size = PFOS), colour = "black") +
scale_size_continuous(
name = "PFOS Description",
breaks = c(10, 50, 100, 500, 1000),  # Adjust the breaks to include more values
labels = c("10", "50", "100", "500", "1000")  # Adjust labels accordingly
) +
geom_smooth(mapping = aes(x = PFOA, y = PFOS),
method = "lm",
se = FALSE,
colour = "orange",
size = 2) +
geom_smooth(mapping = aes(x = PFOA, y = PFOS),
method = "loess",
se = FALSE,
colour = "green",
size = 2) +
geom_point(mapping = aes(x = PFOA, y = PFBS, # new mapping
size = PFBS), # size of points according to PFBS values
colour = "purple") + # colour outside of mappings
theme_classic() # This theme will remove the background colours and lines
PFAS_insects_long <- Statistics_Kumla_20200408 %>% # shortcut for pipe Ctrl + shift + M
pivot_longer(cols = PFBA:PFOA, # select all columns from PFBA to sum_21PFAS
names_to = "somePFAS", # name of the new column
values_to = "Conc") %>%  #name of the values from PFBA:sum_21PFAS
mutate(somePFAS = as.factor(somePFAS)) #make PFAS column a factor variable
#check the PFAS group names
PFAS_insects_long |> group_by(somePFAS) |> tally() |> view()
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) > 0.007, "orange", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.007, "orange", "black"))) +
geom_boxplot() +
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
?ifelse
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFBA, y = PFOS)
) +
geom_point()
plot(x = Statistics_Kumla_20200408$PFBA, y = Statistics_Kumla_20200408$PFOS, main = "PFBA vs PFOS concentrations",
xlab = "PFBA concentrations (ng/L)",
ylab = "PFOS concentrations (ng/L",
pch = 19) # choosing symbol for points in a graph (see ?pch for number/symbol)
plot(x = Statistics_Kumla_20200408$PFBA, y = Statistics_Kumla_20200408$PFOS, main = "PFBA vs PFOS concentrations",
xlab = "PFBA concentrations (ng/L)",
ylab = "PFOS concentrations (ng/L",
pch = 19) # choosing symbol for points in a graph (see ?pch for number/symbol)
# We can add a regression line into the same graph
abline(lm(Statistics_Kumla_20200408$PFBA ~ Statistics_Kumla_20200408$PFOS, data = Statistics_Kumla_20200408), col = "orange", lwd = 3) # lwd is the line width
# We can add a regression line into the same graph
abline(lm(Statistics_Kumla_20200408$PFBA ~ Statistics_Kumla_20200408$PFBA, data = Statistics_Kumla_20200408), col = "orange", lwd = 3) # lwd is the line width
plot(x = Statistics_Kumla_20200408$PFBA, y = Statistics_Kumla_20200408$PFOS, main = "PFBA vs PFOS concentrations",
xlab = "PFBA concentrations (ng/L)",
ylab = "PFOS concentrations (ng/L",
pch = 19) # choosing symbol for points in a graph (see ?pch for number/symbol)
# We can add a regression line into the same graph
abline(lm(Statistics_Kumla_20200408$PFBA ~ Statistics_Kumla_20200408$PFOS, data = Statistics_Kumla_20200408), col = "orange", lwd = 3) # lwd is the line width
# as well as a loess fit
lines(lowess(Statistics_Kumla_20200408$PFBA, Statistics_Kumla_20200408$PFOS), col = "green", lwd = 3)
plot(x = Statistics_Kumla_20200408$PFBA, y = Statistics_Kumla_20200408$PFOS, main = "PFBA vs PFOS concentrations",
xlab = "PFBA concentrations (ng/L)",
ylab = "PFOS concentrations (ng/L",
pch = 19) # choosing symbol for points in a graph (see ?pch for number/symbol)
# We can add a regression line into the same graph
abline(lm(PFAS_insects$PFOS ~ PFAS_insects$PFOA, data = PFAS_insects), col = "blue", lwd = 3) # lwd is the line width
# We can add a regression line into the same graph
abline(lm( Statistics_Kumla_20200408$PFOS ~  Statistics_Kumla_20200408$PFOA, data =  Statistics_Kumla_20200408), col = "blue", lwd = 3) # lwd is the line width
plot(x = PFAS_insects$PFOA, y = PFAS_insects$PFOS, main = "PFOA vs PFOS concentrations",
xlab = "PFOA concentrations (ng/L)",
ylab = "PFOS concentrations (ng/L",
pch = 19) # choosing symbol for points in a graph (see ?pch for number/symbol)
plot(x = Statistics_Kumla_20200408$PFOA, y = Statistics_Kumla_20200408$PFBA, main = "PFBA vs PFOS concentrations",
xlab = "PFOA concentrations (ng/L)",
ylab = "PFBA concentrations (ng/L",
pch = 19) # choosing symbol for points in a graph (see ?pch for number/symbol)
# We can add a regression line into the same graph
abline(lm(Statistics_Kumla_20200408$PFBA ~ Statistics_Kumla_20200408$PFOS, data = Statistics_Kumla_20200408), col = "orange", lwd = 3) # lwd is the line width
plot(x = Statistics_Kumla_20200408$PFOA, y = Statistics_Kumla_20200408$PFBA, main = "PFBA vs PFOS concentrations",
xlab = "PFOA concentrations (ng/L)",
ylab = "PFBA concentrations (ng/L",
pch = 19) + # choosing symbol for points in a graph (see ?pch for number/symbol)
# We can add a regression line into the same graph
abline(lm(Statistics_Kumla_20200408$PFBA ~ Statistics_Kumla_20200408$PFOS, data = Statistics_Kumla_20200408), col = "orange", lwd = 3) # lwd is the line width
plot(x = Statistics_Kumla_20200408$PFOA, y = Statistics_Kumla_20200408$PFBA, main = "PFBA vs PFOS concentrations",
xlab = "PFOA concentrations (ng/L)",
ylab = "PFBA concentrations (ng/L",
pch = 19) + # choosing symbol for points in a graph (see ?pch for number/symbol)
# We can add a regression line into the same graph
abline(lm(Statistics_Kumla_20200408$PFBA ~ Statistics_Kumla_20200408$PFOS, data = Statistics_Kumla_20200408), col = "orange", lwd = 3) + # lwd is the line width
# as well as a loess fit
lines(lowess(Statistics_Kumla_20200408$PFBA, Statistics_Kumla_20200408$PFOS), col = "green", lwd = 3)
plot(x = Statistics_Kumla_20200408$PFOA, y = Statistics_Kumla_20200408$PFBA, main = "PFBA vs PFOS concentrations",
xlab = "PFOA concentrations (ng/L)",
ylab = "PFBA concentrations (ng/L",
pch = 19) + # choosing symbol for points in a graph (see ?pch for number/symbol)
# as well as a loess fit
lines(lowess(Statistics_Kumla_20200408$PFBA, Statistics_Kumla_20200408$PFOS), col = "green", lwd = 3)
plot(x = Statistics_Kumla_20200408$PFOA, y = Statistics_Kumla_20200408$PFBA, main = "PFBA vs PFOS concentrations",
xlab = "PFOA concentrations (ng/L)",
ylab = "PFBA concentrations (ng/L",
pch = 19) + # choosing symbol for points in a graph (see ?pch for number/symbol)
# as well as a loess fit
lines(lowess(Statistics_Kumla_20200408$PFBA, Statistics_Kumla_20200408$PFOA), col = "green", lwd = 3)
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA, color = Group)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = ID, y = PFBA, color = Group)
) +
geom_point() +
geom_smooth(method = "loess")
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "loess")
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "loess",
se = FALSE,
colour = "green",
size = 2)
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "loess",
se = FALSE,
colour = "green",
size = 2) +
theme_minimal()
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "loess",
se = FALSE,
colour = "green",
size = 2) +
theme_void()
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "loess",
se = FALSE,
colour = "green",
size = 2) +
theme_test()
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "lm", # uses the linear regression model
se = TRUE, # this will remove the confidence intervals
colour = "orange",
size = 2) +
theme_test()
ggplot(
data = Statistics_Kumla_20200408,
mapping = aes(x = PFOA, y = PFBA)
) +
geom_point() +
geom_smooth(method = "lm", # uses the linear regression model
se = FALSE, # this will remove the confidence intervals
colour = "orange",
size = 2) +
theme_test()
plot(x = Statistics_Kumla_20200408$PFOA, y = Statistics_Kumla_20200408$PFBA, main = "PFBA vs PFOS concentrations",
xlab = "PFOA concentrations (ng/L)",
ylab = "PFBA concentrations (ng/L",
pch = 19) + # choosing symbol for points in a graph (see ?pch for number/symbol)
# We can add a regression line into the same graph
abline(lm(Statistics_Kumla_20200408$PFOA ~ Statistics_Kumla_20200408$PFBA, data = Statistics_Kumla_20200408), col = "orange", lwd = 3) # lwd is the line width
groupsPFOS <- tatistics_Kumla_20200408[, c("Group", "PFOS")] # subset two variables from the dataframe
groupsPFOS <- Statistics_Kumla_20200408[, c("Group", "PFOS")] # subset two variables from the dataframe
groupsPFOS$Group <- as.factor(groupsPFOS$Group)
barplot(height = Statistics_Kumla_20200408$PFOS)
# Box plot of one variable
boxplot(Statistics_Kumla_20200408$PFBS)
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.007, "orange", "black"))) +
geom_boxplot() +
#scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = ifelse(as.numeric(somePFAS) < 0.007, "orange", "black"))) +
#geom_boxplot() +
#scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc)) +
geom_point(color = ifelse(as.numeric(somePFAS) < 0.007, "orange", "black")) +
#geom_boxplot() +
#scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
PFAS_insects_long |> mutate(color = ifelse(as.numeric(somePFAS) > 0.007, "orange", "black"))
View(PFAS_insects_long)
PFAS_insects_long |> mutate(color = ifelse(Conc > 0.007, "orange", "black"))
ggplot(data = PFAS_insects_long, aes(x = somePFAS, y = Conc))
PFAS_insects_long |> mutate(color = ifelse(Conc > 0.007, "orange", "black")) |> view()
PFAS_insects_long |> mutate(color = ifelse(Conc > 200, "orange", "black")) |> view()
PFAS_insects_long |> mutate(color = ifelse(Conc > 50, "orange", "black")) |> view()
PFAS_insects_long |> mutate(color = ifelse(Conc > 50, "orange", "black")) |>
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = color)) +
geom_boxplot() + #ifelse(test, yes, no)
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
PFAS_insects_long |> mutate(Color = ifelse(Conc > 50, "orange", "black")) |>
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(mapping = aes(color = Color)) +
geom_boxplot() + #ifelse(test, yes, no)
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
PFAS_insects_long |> mutate(Color = ifelse(Conc > 50, "orange", "black")) |>
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(color = Color) +
geom_boxplot() + #ifelse(test, yes, no)
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
PFAS_insects_long |> mutate(Color = ifelse(Conc > 50, "orange", "black")) |>
ggplot(aes(x = somePFAS, y = Conc, color = Color)) +
geom_point() +
geom_boxplot() + #ifelse(test, yes, no)
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
PFAS_insects_long |> mutate(Color = ifelse(Conc > 50, "orange", "black")) |>
ggplot(aes(x = somePFAS, y = Conc)) +
geom_point(aes (color = Color)) +
geom_boxplot() + #ifelse(test, yes, no)
scale_color_identity() +  # Use scale_color_identity to override the default color mapping
theme_classic() +
ylab("Concentration of PFAS (ng/g) in solid samples")
